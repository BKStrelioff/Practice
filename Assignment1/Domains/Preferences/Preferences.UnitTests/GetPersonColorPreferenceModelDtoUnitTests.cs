#region usings

using System;
using System.Collections.Generic;

using Framework.Annotations;

using Preferences.DataObjects;
using Preferences.DataObjects.Get;
using Preferences.DomainModels;
using Preferences.Interfaces;

using Xunit;

#endregion

namespace Preferences.UnitTests
{

    /// <summary>
    ///     Class GetPersonColorPreferenceModelDtoUnitTests.
    /// </summary>
    /// <autogeneratedoc />
    /// TODO Edit XML Comment Template for GetPersonColorPreferenceModelDtoUnitTests
    public static class GetPersonColorPreferenceModelDtoUnitTests
    {

        #region class public methods

        /// <summary>
        ///     Tests the default constructor.
        /// </summary>
        /// <autogeneratedoc />
        /// TODO Edit XML Comment Template for Test_default_constructor
        [ Fact ]
        public static void Test_default_constructor ( )
        {
            var actual = new GetPersonColorPreferenceModelDto ( );

            Assert.NotNull ( actual.DateOfBirth );
            Assert.NotNull ( actual.FavoriteColor );
            Assert.NotNull ( actual.FirstName );
            Assert.NotNull ( actual.LastName );
            Assert.NotNull ( actual.Gender );
        }

        /// <summary>
        ///     Tests the mapping to.
        /// </summary>
        /// <autogeneratedoc />
        /// TODO Edit XML Comment Template for Test_mapping_to
        [ Fact ]
        public static void Test_mapping_to ( )
        {
            var original = PreferencesHelpers.GenerateRandomRecord ( new Random ( ) );
            var dto = original.To < GetPersonColorPreferenceModelDto > ( );

            UnitTestHelpers.AssertRecordIsShallowCopy ( original, dto );

            Assert.Equal ( 0, dto.Id );

            // cross-checks
            Assert.Equal ( "", dto.FirstNameUpper );
            Assert.Equal ( "", dto.LastNameUpper );
            Assert.Equal ( DateTime.MinValue, dto.DateTimeBirth );
        }

        /// <summary>
        ///     Tests the mapping to.
        /// </summary>
        /// <autogeneratedoc />
        /// TODO Edit XML Comment Template for Test_mapping_to
        [ Fact ]
        public static void Test_mapping_to_enumerable ( )
        {
            var randomProvider = new Random ( );
            var original = new List < IPersonColorPreferenceModel >
            {
                PreferencesHelpers.GenerateRandomRecord ( randomProvider ),
                PreferencesHelpers.GenerateRandomRecord ( randomProvider ),
                PreferencesHelpers.GenerateRandomRecord ( randomProvider )
            };

            var dtos = original.To < GetPersonColorPreferenceModelDto > ( ).ToSafeList ( );

            Assert.Equal ( original.Count, dtos.Count );
        }

        /// <summary>
        ///     Tests the populates from.
        /// </summary>
        /// <autogeneratedoc />
        /// TODO Edit XML Comment Template for Test_populates_from
        [ Fact ]
        public static void Test_populates_from ( )
        {
            var original = PreferencesHelpers.GenerateRandomRecord ( new Random ( ) );
            var copy = new GetPersonColorPreferenceModelDto ( ).PopulateFrom ( original );

            UnitTestHelpers.AssertRecordIsShallowCopy ( original, copy );

            Assert.Equal ( 0, copy.Id );

            // cross-checks
            Assert.Equal ( "", copy.FirstNameUpper );
            Assert.Equal ( "", copy.LastNameUpper );
            Assert.Equal ( DateTime.MinValue, copy.DateTimeBirth );
        }

        #endregion

    }

}
