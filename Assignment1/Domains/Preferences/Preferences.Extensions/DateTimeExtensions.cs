#region usings

using System;
using System.Globalization;

using Framework.Annotations;

#endregion

namespace Preferences.Extensions
{

    /// <summary>
    ///     Class DateTimeExtensions.
    /// </summary>
    /// <autogeneratedoc />
    /// TODO Edit XML Comment Template for DateTimeExtensions
    public static class DateTimeExtensions
    {

        #region class public methods

        /// <summary>
        ///     Froms the preference format.
        /// </summary>
        /// <param name="source">The source.</param>
        /// <returns>DateTime.</returns>
        /// <autogeneratedoc />
        /// TODO Edit XML Comment Template for FromPreferenceFormat
        public static DateTime FromPreferenceFormat ( [ NotNull ] this string source )
        {
            // Use invariant in case process uses a different culture
            var result = DateTime.ParseExact ( source, PreferencesFormat, DateTimeFormatInfo.InvariantInfo );

            return result;
        }

        /// <summary>
        ///     Produces the Preferences .
        /// </summary>
        /// <param name="source">The source.</param>
        /// <returns>System.String.</returns>
        /// <autogeneratedoc />
        /// TODO Edit XML Comment Template for ToPreferenceFormat
        [ NotNull ]
        public static string ToPreferenceFormat ( this DateTime source )
        {
            var result = source.ToString ( PreferencesFormat, DateTimeFormatInfo.InvariantInfo );
            return result;
        }

        #endregion

        #region class public properties

        /// <summary>
        ///     Gets the preferences format.
        /// </summary>
        /// <value>The preferences format.</value>
        /// <autogeneratedoc />
        /// TODO Edit XML Comment Template for PreferencesFormat
        [ NotNull ]
        public static string PreferencesFormat
        {
            get
            {
                return "M/d/yyyy";
            }
        }

        #endregion

    }

}
