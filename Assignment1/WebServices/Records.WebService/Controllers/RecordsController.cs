#region usings

using System.Collections.Generic;
using System.Web.Http;

using Framework.Annotations;

using Preferences.DataObjects.Get;

using Records.WebService.Models;

#endregion

namespace Records.WebService.Controllers
{

    /// <summary>
    ///     Class RecordsController.
    /// </summary>
    /// <seealso cref="System.Web.Http.ApiController" />
    /// <autogeneratedoc />
    /// TODO Edit XML Comment Template for RecordsController
    public class RecordsController : ApiController
    {

        #region public constructors

        /// <summary>
        ///     Initializes a new instance of the <see cref="RecordsController" /> class.
        /// </summary>
        /// <autogeneratedoc />
        /// TODO Edit XML Comment Template for #ctor
        public RecordsController ( )
        {
            MyRecordsModel = new RecordsApiModel ( );
        }

        #endregion

        #region instance public methods

        /// <summary>
        ///     Birthdates this instance.
        /// </summary>
        /// <returns>IEnumerable&lt;GetPersonColorPreferenceModelDto&gt;.</returns>
        /// <autogeneratedoc />
        /// TODO Edit XML Comment Template for Birthdate
        [ NotNull ]
        [ ItemNotNull ]
        [ HttpGet ]
        [ Route ( "records/birthdate" ) ]
        public IEnumerable < GetPersonColorPreferenceModelDto > Birthdate ( )
        {
            var result = MyRecordsModel.ByBirthDate ( );

            return result;
        }

        /// <summary>
        ///     Genders this instance.
        /// </summary>
        /// <returns>IEnumerable&lt;GetPersonColorPreferenceModelDto&gt;.</returns>
        /// <autogeneratedoc />
        /// TODO Edit XML Comment Template for Gender
        [ NotNull ]
        [ ItemNotNull ]
        [ Route ( "records/gender" ) ]
        [ HttpGet ]
        public IEnumerable < GetPersonColorPreferenceModelDto > Gender ( )
        {
            var result = MyRecordsModel.ByGender ( );

            return result;
        }

        // GET: records
        /// <summary>
        ///     Gets this instance.
        /// </summary>
        /// <returns>IEnumerable&lt;GetPersonColorPreferenceModelDto&gt;.</returns>
        /// <autogeneratedoc />
        /// TODO Edit XML Comment Template for Get
        [ NotNull ]
        [ ItemNotNull ]
        [ Route ( "records" ) ]
        [ HttpGet ]
        public IEnumerable < GetPersonColorPreferenceModelDto > Get ( )
        {
            var result = MyRecordsModel.ByIndex ( );

            return result;
        }

        /// <summary>
        ///     Lasts the name.
        /// </summary>
        /// <returns>IEnumerable&lt;GetPersonColorPreferenceModelDto&gt;.</returns>
        /// <autogeneratedoc />
        /// TODO Edit XML Comment Template for LastName
        [ NotNull ]
        [ ItemNotNull ]
        [ Route ( "records/lastname" ) ]
        [ HttpGet ]
        public IEnumerable < GetPersonColorPreferenceModelDto > LastName ( )
        {
            var result = MyRecordsModel.ByLastNameDescending ( );

            return result;
        }

        /// <summary>
        ///     Names this instance.
        /// </summary>
        /// <returns>IEnumerable&lt;GetPersonColorPreferenceModelDto&gt;.</returns>
        /// <autogeneratedoc />
        /// TODO Edit XML Comment Template for Name
        [ NotNull ]
        [ ItemNotNull ]
        [ Route ( "records/name" ) ]
        [ HttpGet ]
        public IEnumerable < GetPersonColorPreferenceModelDto > Name ( )
        {
            var result = MyRecordsModel.ByName ( );

            return result;
        }

        //// POST: records
        //[HttpPost]
        //public int PostDto ( [ NotNull ]  PostPersonColorPreferenceModelDto dto )
        //{
        //    var result = MyRecordsModel.Create ( dto );

        //    return result;
        //}

        /// <summary>
        ///     This API takes a single line that still contains the delimiter.
        /// </summary>
        /// <param name="line">The line.</param>
        /// <returns>System.Int32.</returns>
        /// <remarks>
        ///     Since we are told the data fields do not contain the delimiter,
        ///     we can determine the delimiter from scanning the line
        /// </remarks>
        [ HttpPost ]
        [ Route ( "records" ) ]
        public int PostLine ( [ NotNull ] object line )
        {
            var asString = line.ToString ( );
            var result = MyRecordsModel.Create ( asString );

            return result;
        }

        #endregion

        #region instance non-public properties and indexers

        /// <summary>
        ///     Gets my records model.
        /// </summary>
        /// <value>My records model.</value>
        /// <autogeneratedoc />
        /// TODO Edit XML Comment Template for MyRecordsModel
        [ NotNull ]
        private RecordsApiModel MyRecordsModel
        {
            get;
        }

        #endregion

    }

}
