#region usings

using System;
using System.Collections.Generic;

using Framework.Annotations;

using Preferences.DataObjects;
using Preferences.DataObjects.Get;
using Preferences.DataObjects.Post;
using Preferences.DomainModels;

#endregion

namespace Preferences.WebSite.Areas.PreferencesArea.Models
{

    /// <summary>
    ///     Class RecordsModel is a wrapper class around <see cref="PreferencesModel" /> that is used
    ///     mainly by the generated WebSite. This should be refactored where possible to be shared
    ///     with the WebService project.
    /// </summary>
    /// <autogeneratedoc />
    /// TODO Edit XML Comment Template for RecordsModel
    public class RecordsModel
    {

        #region non-public constructors

        /// <summary>
        ///     Initializes static members of the <see cref="RecordsModel" /> class.
        /// </summary>
        /// <autogeneratedoc />
        /// TODO Edit XML Comment Template for #ctor
        static RecordsModel ( )
        {
            // we are not persisting data for now, otherwise this would use a connection
            CurrentModel = new PreferencesModel ( );

            // Add some random records
            var generatedRecords = PreferencesHelpers.GenerateRandomRecords ( 10, new Random ( ), 7 );
            CurrentModel.Add ( generatedRecords );
        }

        #endregion

        #region class public properties

        /// <summary>
        ///     Gets the current model.
        /// </summary>
        /// <value>The current model.</value>
        /// <autogeneratedoc />
        /// TODO Edit XML Comment Template for CurrentModel
        [ NotNull ]
        protected static PreferencesModel CurrentModel
        {
            get;
        }

        #endregion

        #region instance public methods

        /// <summary>
        ///     Bies the birth date.
        /// </summary>
        /// <returns>IEnumerable&lt;GetPersonColorPreferenceModelDto&gt;.</returns>
        /// <autogeneratedoc />
        /// TODO Edit XML Comment Template for ByBirthDate
        [ NotNull ]
        [ ItemNotNull ]
        public IEnumerable < GetPersonColorPreferenceModelDto > ByBirthDate ( )
        {
            var result = CurrentModel.ByBirthDate ( ).To < GetPersonColorPreferenceModelDto > ( );

            return result;
        }

        /// <summary>
        ///     Displays the records sorted by Gender, then by LastName.
        /// </summary>
        /// <returns>IEnumerable&lt;GetPersonColorPreferenceModelDto&gt;.</returns>
        /// <autogeneratedoc />
        /// TODO Edit XML Comment Template for ByGender
        [ NotNull ]
        [ ItemNotNull ]
        public IEnumerable < GetPersonColorPreferenceModelDto > ByGender ( )
        {
            var result = CurrentModel.ByGenderLastName ( ).To < GetPersonColorPreferenceModelDto > ( );

            return result;
        }

        /// <summary>
        ///     Displayes the records simply as they exist.
        /// </summary>
        /// <returns>IEnumerable&lt;GetPersonColorPreferenceModelDto&gt;.</returns>
        /// <autogeneratedoc />
        /// TODO Edit XML Comment Template for ByIndex
        [ NotNull ]
        [ ItemNotNull ]
        public IEnumerable < GetPersonColorPreferenceModelDto > ByIndex ( )
        {
            var result = CurrentModel.PersonColorPreferences.To < GetPersonColorPreferenceModelDto > ( );

            return result;
        }

        /// <summary>
        ///     Displayes the records sorted by name.
        /// </summary>
        /// <returns>IEnumerable&lt;GetPersonColorPreferenceModelDto&gt;.</returns>
        /// <autogeneratedoc />
        /// TODO Edit XML Comment Template for ByName
        [ NotNull ]
        [ ItemNotNull ]
        public IEnumerable < GetPersonColorPreferenceModelDto > ByName ( )
        {
            var result = CurrentModel.ByName ( ).To < GetPersonColorPreferenceModelDto > ( );

            return result;
        }

        /// <summary>
        ///     Creates a new <see cref="PersonColorPreferenceModel" /> based on the incoming <paramref name="dto" />
        /// </summary>
        /// <param name="dto">The dto.</param>
        /// <autogeneratedoc />
        /// TODO Edit XML Comment Template for Create
        public void Create ( [ NotNull ] PostPersonColorPreferenceModelDto dto )
        {
            var record = dto.To < PersonColorPreferenceModel > ( );

            CurrentModel.Add ( record );
        }

        #endregion

    }

}
