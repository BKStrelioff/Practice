#region usings

using System.Web.Mvc;

using Framework.Annotations;

using Preferences.DataObjects.Post;
using Preferences.WebSite.Areas.PreferencesArea.Models;

#endregion

namespace Preferences.WebSite.Areas.PreferencesArea.Controllers
{

    /// <summary>
    ///     Class RecordsController.
    /// </summary>
    /// <seealso cref="System.Web.Mvc.Controller" />
    /// <autogeneratedoc />
    /// TODO Edit XML Comment Template for RecordsController
    public class RecordsController : Controller
    {

        #region public constructors

        /// <summary>
        ///     Initializes a new instance of the <see cref="RecordsController" /> class.
        /// </summary>
        /// <autogeneratedoc />
        /// TODO Edit XML Comment Template for #ctor
        public RecordsController ( )
        {
            MyRecordsModel = new RecordsModel ( );
        }

        #endregion

        #region instance public methods

        /// <summary>
        ///     Birthdates this instance.
        /// </summary>
        /// <returns>ActionResult.</returns>
        /// <autogeneratedoc />
        /// TODO Edit XML Comment Template for Birthdate
        [ NotNull ]
        public ActionResult Birthdate ( )
        {
            var viewModel = MyRecordsModel.ByBirthDate ( );
            return View ( viewModel ).NotNull ( );
        }

        // GET: PreferencesArea/Records/Create
        /// <summary>
        ///     Creates this instance.
        /// </summary>
        /// <returns>ActionResult.</returns>
        /// <autogeneratedoc />
        /// TODO Edit XML Comment Template for Create
        [ Route ( "/records" ) ]
        [ NotNull ]
        public ActionResult Create ( )
        {
            return View ( ).NotNull ( );
        }

        // POST: PreferencesArea/Records/Create
        /// <summary>
        ///     Creates the specified dto.
        /// </summary>
        /// <param name="dto">The dto.</param>
        /// <returns>ActionResult.</returns>
        /// <autogeneratedoc />
        /// TODO Edit XML Comment Template for Create
        [ HttpPost ]
        [ Route ( "/records" ) ]
        [ NotNull ]
        public ActionResult Create ( [ NotNull ] PostPersonColorPreferenceModelDto dto )
        {
            try
            {
                MyRecordsModel.Create ( dto );

                return RedirectToAction ( "RecordsIndex" ).NotNull ( );
            }
            catch
            {
                return View ( ).NotNull ( );
            }
        }

        // GET: PreferencesArea/Records
        /// <summary>
        ///     Genders this instance.
        /// </summary>
        /// <returns>ActionResult.</returns>
        /// <autogeneratedoc />
        /// TODO Edit XML Comment Template for Gender
        [ NotNull ]
        public ActionResult Gender ( )
        {
            var viewModel = MyRecordsModel.ByGender ( );
            return View ( viewModel ).NotNull ( );
        }

        /// <summary>
        ///     Names this instance.
        /// </summary>
        /// <returns>ActionResult.</returns>
        /// <autogeneratedoc />
        /// TODO Edit XML Comment Template for Name
        [ NotNull ]
        public ActionResult Name ( )
        {
            var viewModel = MyRecordsModel.ByName ( );
            return View ( viewModel ).NotNull ( );
        }

        // GET: PreferencesArea/Records
        /// <summary>
        ///     Recordses the index.
        /// </summary>
        /// <returns>ActionResult.</returns>
        /// <autogeneratedoc />
        /// TODO Edit XML Comment Template for RecordsIndex
        [ NotNull ]
        public ActionResult RecordsIndex ( )
        {
            var viewModel = MyRecordsModel.ByIndex ( );
            return View ( viewModel ).NotNull ( );
        }

        #endregion

        #region instance non-public properties and indexers

        /// <summary>
        ///     Gets my records model.
        /// </summary>
        /// <value>My records model.</value>
        /// <autogeneratedoc />
        /// TODO Edit XML Comment Template for MyRecordsModel
        [ NotNull ]
        private RecordsModel MyRecordsModel
        {
            get;
        }

        #endregion

    }

}
